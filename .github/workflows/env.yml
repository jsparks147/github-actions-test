name: Context workflow
on: [ push, pull_request ]
env: 
  WF_ENV: ${{ secrets.WF_ENV }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  functions:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    steps:
      - name: Dump 
        run: |
          echo  ${{ contains( 'hello','lxl' ) }}
          echo  ${{ startsWith( 'hello','hew' ) }}
          echo  ${{ endsWith( 'hello','lo' ) }}
          echo  ${{ format( 'Hello {0} {1} {2}', 'World', '!' , '!' ) }}
      
  step_one:
    runs-on: ubuntu-18.04
    if: github.event_name == 'push'
    
    steps:
      - name:  Dump GitHub context
        id: github_context_step
        run: eccho '${{ toJSON(github) }}' 
        continue-on-error: true
      - name: Dump job context
        if: failure()
        run: echo '${{ toJSON(job) }}'   
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: eccho '${{ toJSON(runner) }}'
      - name: Dump strategy context
        if: always()
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'            

# jobs:
#  dump_contexts_to_log:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Dump GitHub context
#         id: github_context_step
#         run: echo '${{ toJSON(github) }}'
#       - name: Dump job context
#         run: echo '${{ toJSON(job) }}'
#       - name: Dump steps context
#         run: echo '${{ toJSON(steps) }}'
#       - name: Dump runner context
#         run: echo '${{ toJSON(runner) }}'
#       - name: Dump strategy context
#         run: echo '${{ toJSON(strategy) }}'
#       - name: Dump matrix context
#         run: echo '${{ toJSON(matrix) }}'

  # decrypt: 
  #   runs-on: ubuntu-18.04
  #   steps: 
  #     - uses: actions/checkout@v1
  #     - name: Decrypt file
  #       run: gpg --quiet --batch --yes --decrypt  --passphrase=$MY_PASSPHRASE --output $HOME/secret.txt file.txt.gpg
  #       env:
  #         MY_PASSPHRASE: ${{ secrets.MY_PASSPHRASE }}
  #     - name: print file
  #       run: cat $HOME/secret.txt

  # create_issue:
  #   runs-on: ubuntu-18.04 
  #   permissions:
  #     issues: write 
  #   steps:
  #     - name: push a file with rando num
  #       run: | 
  #         pwd
  #         ls -la
  #         git init   
  #         echo  "https://$GITHUB_ACTOR:${{ secrets.MY_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"  
  #         git remote add origin "https://$GITHUB_ACTOR:${{ secrets.MY_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
  #         git config --global user.email "auto@bot.com"
  #         git config --global user.name "auto"
  #         git fetch
  #         git checkout main
  #         git branch --set-upstream-to=origin/main
  #         git pull
  #         ls -a
  #         echo $RANDOM >>  random.txt
  #         ls -a
  #         git add -A 
  #         git config -l
  #         git commit -m "commit random.txt file"
  #         git push

      # - name: Create issue using REST API
      #   run: |
      #     curl --request POST \
      #     --url https://api.github.com/repos/${{ github.repository }}/issues \
      #     --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
      #     --header 'content-type: application/json' \
      #     --data '{
      #       "title": "Automated issue for commit: ${{ github.sha }}",
      #       "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
      #       }' \
      #     --fail
  # log-env:
  #   runs-on: ubuntu-18.04
  #   env: 
  #     JOB_ENV: Only avalilble to stpes in log-env job
  #   steps:
  #     - name: Log ENV Vars
  #       env: 
  #         STEP_ENV: only available in step
  #       run: |
  #         echo "WF_ENV: ${WF_ENV}"
  #         echo "JOB_ENV: ${JOB_ENV}"
  #         echo "STEP_ENV: ${STEP_ENV}"
  #         echo "GH_TOKEN: ${GH_TOKEN}"
  #     - name: Log step 2
  #       run: |
  #         echo "WF_ENV: ${WF_ENV}"
  #         echo "JOB_ENV: ${JOB_ENV}"
  #         echo "STEP_ENV: ${STEP_ENV}"
  # log-default-env:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Default Env Vars  
  #       run: |
  #         echo "HOME: ${HOME}"
  #         echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
  #         echo "GITHUB_ACTION: ${GITHUB_ACTION}"
  #         echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
  #         echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
  #         echo "GITHUB_SHA: ${GITHUB_SHA}"
  #         echo "GITHUB_REF: ${GITHUB_REF}"
  #         echo "WF_ENV: ${WF_ENV}"
  #         echo "JOB_ENV: ${JOB_ENV}"
  #         echo "STEP_ENV: ${STEP_ENV}"

    